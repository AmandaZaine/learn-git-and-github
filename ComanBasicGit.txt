my rep: https://github.com/AmandaZaine/learn-git-and-github.git

Comandos básicos:

cd nomedapasta >> serve para entrar em uma pasta

cd local1/local2/local3 >> serve para entra na pasta desejada com apenas um comando

cd ..  >> serve para sair de uma pasta

ls  >> serve para ver oque tem dentro da pasta

clear  >> limpar comandos da tela

git init >> cria um repositório na pasta atual da sua localização atual de acordo com o terminal  //

git status >> status atual do seu repositório

git add nomedoarquivo.suaextensao >> adiciona o arquivo no seu controle de versao

git add *.txt  >> adiciona todos os arquivos txt

git add .  >> adiciona todos os arquivos que estiverem no seu diretório

git add *.extensao  >> adiciona todos os arquivos de uma determinada extensão

git add -A  >> adiciona todos os arquivos que tem na pasta e atualiza o repositório

git add >> sai do work directory e vai/passa os arquivos para as "staging area"

git commit -m "Mensagem de identificação do commit"  >>  tira da staging area e manda para repositorio // commit=salvar  // congela uma determinada versão do código

   >> Working directory: local onde voce adiciona novos arquivos ou edita arquivos existentes

   >> Staging area: local para onde os arquivos vao quando usa-se o comando git add

   >> Repositorio: local para onde vai os arquivos quando voce usa o comando git commit // quando termina o trabalho

.gitignore  >>  nome de arquivo que o git ignora

git commit -a -m "Mensagem de identificação do commit"   >>  pula a etada do git add e vai direto para o git commit

git remote add origin linkdogithub  >>  define para onde estamos enviando o código

git push -u origin master  >>  envia para o github

git push  >> salva as atualizações no github

~~ Comandos da aula 3 ~~

git diff  >> para consultar todas as informações do seu arquivo que está no seu diretorio mas ainda nao foi adicionado para a staging area 

git add . >> adiciona o arquivo na staging area

git diff --staged  >>  para saber oque está na staging area e que vai ser enviado para o proximo commit

git log  >>  mostra todos os commits que foram feitos

git log -p  >> mostra informações detalhadas dos commits

q   >>  volta para o terminal

git log -p -n  >> mostra committs especificos // n = numeros de commits que voce quer que apareça

gitk  >> gera relatório com todas as modificações/alterações







